{"version":3,"sources":["constants.js","store.js","components/sessions/ConnectedSession.js","assets/img/load.gif","components/sessions/JoinSession.js","components/sessions/StartSession.js","components/sessions/SessionLanding.js","App.js","reportWebVitals.js","index.js"],"names":["RESET_SESSION","SET_SESSION_CODE","SET_SESSION_STATE","ACTIVE_SESSION_STATE","SESSION_INACTIVE_STATE","SEEKING_SESSION_STATE","initialState","session","code","state","reducer","action","type","Context","React","createContext","ConnectedSession","history","useHistory","useContext","store","dispatch","useEffect","console","log","timeout","window","setTimeout","cleanupSession","replace","className","onClick","role","SeekingSession","alt","src","loadingGif","width","SessionCodeForm","htmlFor","initialValues","onSubmit","values","setSubmitting","isSubmitting","handleChange","autoComplete","id","name","onChange","e","target","value","length","match","placeholder","required","disabled","to","JoinSession","activeComponent","clearTimeout","Error","GettingSessionCode","StartSession","useState","setCode","a","Promise","resolve","Math","random","toString","slice","response","fetchSessionCode","Landing","SessionLanding","basename","path","exact","App","useReducer","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LACaA,EAAgB,wBAChBC,EAAmB,mBACnBC,EAAoB,4BAKpBC,EAAuB,SACvBC,EAAyB,WACzBC,EAAwB,U,gBCAxBC,EAAe,CAE1BC,QAAS,CACPC,KAAM,KACNC,MAAOL,IAIEM,EAAU,SAACD,EAAOE,GAC7B,OAAQA,EAAOC,MACb,KAAKZ,EACH,OAAO,2BACFS,GADL,IAEEF,QAASD,EAAaC,UAG1B,KAAKN,EACH,OAAO,2BACFQ,GADL,IAEEF,QAAS,CACPC,KAAMG,EAAOH,KACbC,MAAOJ,KAIb,KAAKH,EACH,OAAO,2BACFO,GADL,IAEEF,QAAQ,2BACHE,EAAMF,SADJ,IAELE,MAAOE,EAAOF,UAIpB,QACE,OAAOA,IAKAI,EAAUC,IAAMC,gB,sBCMdC,MAlDf,WAEE,IAAMC,EAAUC,cAFU,EAKAC,qBAAWN,GAA9BO,EALmB,EAKnBA,MAAOC,EALY,EAKZA,SACPd,EAAWa,EAAXb,QAyBP,OAvBAe,qBAAU,WACR,GAAIf,EAAQE,QAAUN,GAAwBI,EAAQC,KAAM,CAc1D,OAAO,YAbP,WACEe,QAAQC,IAAI,sBAAuBjB,GAEnC,IAAMkB,EAAUC,OAAOC,YAAW,WAChCJ,QAAQC,IAAI,sBACX,KASHI,OAGH,CAACrB,IAEAA,EAAQE,QAAUN,GAAyBI,EAAQC,MACrDS,EAAQY,QAAQ,KAEhB,sBAAKC,UAAU,sDAAf,UACE,qDACA,sBAAMA,UAAU,4FAAhB,SACGvB,EAAQC,OAEX,sBACEsB,UAAU,mCACVC,QAAS,WACPV,EAAS,CAACT,KAAMZ,IAChBiB,EAAQY,QAAQ,MAElBG,KAAK,SANP,+B,QC3CS,MAA0B,iCC8DzC,SAASC,IAAkB,IAClBZ,EAAYF,qBAAWN,GAAvBQ,SACP,OACE,sBAAKS,UAAU,sDAAf,UACE,+DACA,qBAAKI,IAAI,GAAGC,IAAKC,EAAYC,MAAM,OACnC,sBACEP,UAAU,mCACVC,QAAS,WACPV,EAAS,CAACT,KAAMZ,KAElBgC,KAAK,SALP,uBAYN,SAASM,IAAmB,IAAD,EACCnB,qBAAWN,GAA9BO,EADkB,EAClBA,MAAOC,EADW,EACXA,SACPd,EAAWa,EAAXb,QAEP,OACE,sBAAKuB,UAAU,sDAAf,UACE,uBAAOS,QAAQ,OAAf,SACE,mDAGF,cAAC,IAAD,CACEC,cAAe,CAAChC,KAAM,IACtBiC,SAAU,SAACC,EAAD,GAA8B,IAApBC,EAAmB,EAAnBA,cAClBtB,EAAS,CACPT,KAAMX,EACNO,KAAMkC,EAAOlC,OAEfmC,GAAc,IAPlB,SASG,gBAAEC,EAAF,EAAEA,aAAcF,EAAhB,EAAgBA,OAAQG,EAAxB,EAAwBA,aAAxB,OACC,eAAC,IAAD,CAAMf,UAAU,6CAAhB,UACE,uBACEgB,aAAa,MACbhB,UAAU,mPACViB,GAAG,OACHC,KAAK,OACLC,SAAU,SAACC,GAET,GAAIA,EAAEC,OAAOC,MAAMC,OAAS,EAAG,OAAO,EAItC,IAAKH,EAAEC,OAAOC,MAAME,MADI,kBACoB,OAAO,EAEnDT,EAAaK,IAEfK,YAAY,SACZC,UAAU,EACV5C,KAAK,OACLwC,MAAOV,EAAOlC,OAEhB,wBACEsB,UAAU,4HACV2B,SACEf,EAAOlC,KAAK6C,OAAS,GACrBT,GACArC,EAAQE,QAAUL,EAEpBQ,KAAK,SAPP,sBAcN,cAAC,IAAD,CAAMkB,UAAU,oBAAoB4B,GAAG,IAAvC,wBAOSC,MA9Hf,WAEE,IAwBIC,EAxBE3C,EAAUC,cAFK,EAKKC,qBAAWN,GAA9BO,EALc,EAKdA,MAAOC,EALO,EAKPA,SACPd,EAAWa,EAAXb,QAqBP,OAnBAe,qBAAU,WACR,GAAIf,EAAQE,QAAUJ,EAAuB,CAE3C,IAAMoB,EAAUC,OAAOC,YAAW,WAChCJ,QAAQC,IAAI,mBACZH,EAAS,CACPT,KAAMV,EACNO,MAAON,IAETc,EAAQY,QAAQ,cACf,MAEH,OAAO,WACLH,OAAOmC,aAAapC,OAGvB,CAACJ,EAAUJ,EAASV,EAAQE,QAGvBF,EAAQE,OACd,KAAKN,EACH,OAAO,KAET,KAAKE,EACHuD,EAAkB,cAAC3B,EAAD,IAClB,MAEF,KAAK7B,EACHwD,EAAkB,cAACtB,EAAD,IAClB,MAEF,QACE,MAAM,IAAIwB,MAAM,yBAGpB,OAAOF,G,yBCkCT,SAASG,IACP,OACE,qBAAKjC,UAAU,kDAAf,SACE,qBAAKI,IAAI,GAAGC,IAAKC,EAAYC,MAAM,SAK1B2B,MAzFf,WAAwB,MAEEC,mBAAS,MAFX,mBAEfzD,EAFe,KAET0D,EAFS,KAKhBjD,EAAUC,cAGTG,EAAYF,qBAAWN,GAAvBQ,SA6CP,OAnCAC,qBAAU,WACR,IAAKd,EAAM,6CACT,4BAAA2D,EAAA,6DACE5C,QAAQC,IAAI,yBADd,SAEyB,IAAI4C,SAAQ,SAACC,GAClC3C,OAAOC,YAAW,WAChB0C,EAAQ,CAAC7D,KAAM8D,KAAKC,SAASC,WAAWC,MAAM,EAAG,OAChD,QALP,OAEQC,EAFR,OAQEnD,QAAQC,IAAI,oBAAqBkD,GACjCR,EAAQQ,EAASlE,MATnB,4CADS,uBAAC,WAAD,wBAaTmE,MAED,CAACnE,EAAM0D,IAGV5C,qBAAU,WACR,GAAId,EAAM,CACR,IAAMiB,EAAUC,OAAOC,YAAW,WAChCJ,QAAQC,IAAI,mBAAqBhB,GACjCa,EAAS,CAACT,KAAMX,EAAkBO,SAClCa,EAAS,CAACT,KAAMV,EAAmBO,MAAON,IAC1Cc,EAAQY,QAAQ,cACf,KAEH,OAAO,WAELH,OAAOmC,aAAapC,OAGvB,CAACjB,EAAMa,EAAUJ,IAEfT,EAEH,sBAAKsB,UAAU,uDAAf,UACE,sBAAKA,UAAU,sDAAf,UACE,0DACA,sBAAMA,UAAU,4FAAhB,SACGtB,IAEH,mGAIF,sBAAKsB,UAAU,sDAAf,UACE,4DACA,qBAAKI,IAAI,GAAGC,IAAKC,EAAYC,MAAM,UAErC,sBACEP,UAAU,mCACVC,QAAS,WA5DbR,QAAQC,IAAI,kBACZH,EAAS,CAACT,KAAMZ,IAChBuB,QAAQC,IAAI,iBACZP,EAAQY,QAAQ,MA4DZG,KAAK,SALP,4BAhBc,cAAC+B,EAAD,KCpCpB,SAASa,IACP,OACE,sBAAK9C,UAAU,4CAAf,UACE,4DACA,sBAAKA,UAAU,4DAAf,UACE,cAAC,IAAD,CACEA,UAAU,2HACV4B,GAAG,QAFL,2BAKA,cAAC,IAAD,CACE5B,UAAU,2HACV4B,GAAG,QAFL,gCAUOmB,MA3Cf,WACE,OACE,qBAAK/C,UAAU,sCAAf,SACE,cAAC,IAAD,CAAQgD,SAAS,2BAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,WAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,QAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACE,cAACH,EAAD,cCJGK,MAZf,WAAgB,IAAD,EACaC,qBAAWxE,EAASJ,GADjC,mBACNc,EADM,KACCC,EADD,KAGb,OACE,cAACR,EAAQsE,SAAT,CAAkB/B,MAAO,CAAChC,QAAOC,YAAjC,SACE,qBAAKS,UAAU,8EAAf,SACE,cAAC,EAAD,S,QCCOsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,EAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8d4e696a.chunk.js","sourcesContent":["// reducer actions\nexport const RESET_SESSION = 'session_reset_session'\nexport const SET_SESSION_CODE = 'session_set_code'\nexport const SET_SESSION_STATE = 'session_set_session_state'\n\n// sessions\n\n// session states\nexport const ACTIVE_SESSION_STATE = 'active'\nexport const SESSION_INACTIVE_STATE = 'inactive'\nexport const SEEKING_SESSION_STATE = 'seeking'\n","import {\n  RESET_SESSION,\n  SEEKING_SESSION_STATE,\n  SESSION_INACTIVE_STATE,\n  SET_SESSION_CODE,\n  SET_SESSION_STATE,\n} from './constants'\n\nimport React from 'react'\n\nexport const initialState = {\n  // session information\n  session: {\n    code: null,\n    state: SESSION_INACTIVE_STATE,\n  },\n}\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case RESET_SESSION: {\n      return {\n        ...state,\n        session: initialState.session,\n      }\n    }\n    case SET_SESSION_CODE: {\n      return {\n        ...state,\n        session: {\n          code: action.code,\n          state: SEEKING_SESSION_STATE,\n        },\n      }\n    }\n    case SET_SESSION_STATE: {\n      return {\n        ...state,\n        session: {\n          ...state.session,\n          state: action.state,\n        },\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const Context = React.createContext()\n","import {ACTIVE_SESSION_STATE, RESET_SESSION} from '../../constants'\nimport {useContext, useEffect} from 'react'\n\nimport {Context} from '../../store'\nimport {useHistory} from 'react-router-dom'\n\nfunction ConnectedSession() {\n  // routing\n  const history = useHistory()\n\n  // store\n  const {store, dispatch} = useContext(Context)\n  const {session} = store\n\n  useEffect(() => {\n    if (session.state === ACTIVE_SESSION_STATE && session.code) {\n      function cleanupSession() {\n        console.log('cleaning up session', session)\n        // simulate async cleanup\n        const timeout = window.setTimeout(() => {\n          console.log('done cleaning up')\n        }, 1000)\n\n        return () => {\n          window.clearTimeout(timeout)\n        }\n      }\n\n      // active session is being killed by user. return cleanup function\n      return () => {\n        cleanupSession()\n      }\n    }\n  }, [session])\n\n  if (session.state !== ACTIVE_SESSION_STATE || !session.code)\n    history.replace('/')\n  return (\n    <div className=\"flex flex-col items-center justify-center space-y-6\">\n      <h1>You are in session:</h1>\n      <span className=\"text-7xl font-display bg-gameboy-green-lightest text-gameboy-green-darkest p-4 rounded-md\">\n        {session.code}\n      </span>\n      <span\n        className=\"text-sm underline cursor-pointer\"\n        onClick={() => {\n          dispatch({type: RESET_SESSION})\n          history.replace('/')\n        }}\n        role=\"button\">\n        Leave session\n      </span>\n    </div>\n  )\n}\n\nexport default ConnectedSession\n","export default __webpack_public_path__ + \"static/media/load.ba664b10.gif\";","import {\n  ACTIVE_SESSION_STATE,\n  RESET_SESSION,\n  SEEKING_SESSION_STATE,\n  SESSION_INACTIVE_STATE,\n  SET_SESSION_CODE,\n  SET_SESSION_STATE,\n} from '../../constants'\nimport {Form, Formik} from 'formik'\nimport {useContext, useEffect} from 'react'\n\nimport {Context} from '../../store'\nimport {Link} from 'react-router-dom'\nimport loadingGif from '../../assets/img/load.gif'\nimport {useHistory} from 'react-router-dom'\n\nfunction JoinSession() {\n  // routing\n  const history = useHistory()\n\n  // store\n  const {store, dispatch} = useContext(Context)\n  const {session} = store\n\n  useEffect(() => {\n    if (session.state === SEEKING_SESSION_STATE) {\n      // Simulate async joining session\n      const timeout = window.setTimeout(() => {\n        console.log('joining session')\n        dispatch({\n          type: SET_SESSION_STATE,\n          state: ACTIVE_SESSION_STATE,\n        })\n        history.replace('/session')\n      }, 2500)\n\n      return () => {\n        window.clearTimeout(timeout)\n      }\n    }\n  }, [dispatch, history, session.state])\n\n  let activeComponent\n  switch (session.state) {\n    case ACTIVE_SESSION_STATE: {\n      return null\n    }\n    case SEEKING_SESSION_STATE: {\n      activeComponent = <SeekingSession />\n      break\n    }\n    case SESSION_INACTIVE_STATE: {\n      activeComponent = <SessionCodeForm />\n      break\n    }\n    default:\n      throw new Error('Invalid session state')\n  }\n\n  return activeComponent\n}\n\nfunction SeekingSession() {\n  const {dispatch} = useContext(Context)\n  return (\n    <div className=\"flex flex-col items-center justify-center space-y-6\">\n      <h1>Searching for your session...</h1>\n      <img alt=\"\" src={loadingGif} width=\"20\" />\n      <span\n        className=\"text-sm underline cursor-pointer\"\n        onClick={() => {\n          dispatch({type: RESET_SESSION})\n        }}\n        role=\"button\">\n        Cancel\n      </span>\n    </div>\n  )\n}\n\nfunction SessionCodeForm() {\n  const {store, dispatch} = useContext(Context)\n  const {session} = store\n\n  return (\n    <div className=\"flex flex-col items-center justify-center space-y-6\">\n      <label htmlFor=\"code\">\n        <h1>Enter your code</h1>\n      </label>\n\n      <Formik\n        initialValues={{code: ''}}\n        onSubmit={(values, {setSubmitting}) => {\n          dispatch({\n            type: SET_SESSION_CODE,\n            code: values.code,\n          })\n          setSubmitting(false)\n        }}>\n        {({isSubmitting, values, handleChange}) => (\n          <Form className=\"flex items-center justify-center space-x-3\">\n            <input\n              autoComplete=\"off\"\n              className=\"focus:border-gameboy-green-lightest focus:ring-1 focus:ring-gameboy-green-lightest focus:outline-none w-4/12 text-center font-display uppercase text-4xl text-gray-900 placeholder-gray-500 border border-gameboy-green-lightest rounded-md py-3\"\n              id=\"code\"\n              name=\"code\"\n              onChange={(e) => {\n                // code won't be over 6 characters\n                if (e.target.value.length > 6) return false\n\n                // code will only be letters and numbers\n                const simpleUuidRegex = /^[a-zA-Z0-9]*$/\n                if (!e.target.value.match(simpleUuidRegex)) return false\n\n                handleChange(e)\n              }}\n              placeholder=\"------\"\n              required={true}\n              type=\"text\"\n              value={values.code}\n            />\n            <button\n              className=\"font-display text-4xl rounded-md py-3 px-5 bg-gameboy-green-lightest text-gameboy-green-darkest disabled:bg-gameboy-green\"\n              disabled={\n                values.code.length < 6 ||\n                isSubmitting ||\n                session.state !== SESSION_INACTIVE_STATE\n              }\n              type=\"submit\">\n              Go\n            </button>\n          </Form>\n        )}\n      </Formik>\n\n      <Link className=\"text-sm underline\" to=\"/\">\n        Go back\n      </Link>\n    </div>\n  )\n}\n\nexport default JoinSession\n","import {\n  ACTIVE_SESSION_STATE,\n  RESET_SESSION,\n  SET_SESSION_CODE,\n  SET_SESSION_STATE,\n} from '../../constants'\nimport {useContext, useEffect, useState} from 'react'\n\nimport {Context} from '../../store'\nimport loadingGif from '../../assets/img/load.gif'\nimport {useHistory} from 'react-router-dom'\n\nfunction StartSession() {\n  // local state\n  const [code, setCode] = useState(null)\n\n  // routing\n  const history = useHistory()\n\n  // store\n  const {dispatch} = useContext(Context)\n\n  function endSession() {\n    console.log('ending session')\n    dispatch({type: RESET_SESSION})\n    console.log('ended session')\n    history.replace('/')\n  }\n\n  // Request session code if we do not have one\n  useEffect(() => {\n    if (!code) {\n      async function fetchSessionCode() {\n        console.log('fetching session code')\n        const response = await new Promise((resolve) => {\n          window.setTimeout(() => {\n            resolve({code: Math.random().toString().slice(2, 8)})\n          }, 800)\n        })\n\n        console.log('got code response', response)\n        setCode(response.code)\n      }\n\n      fetchSessionCode()\n    }\n  }, [code, setCode])\n\n  // Watch for join session event\n  useEffect(() => {\n    if (code) {\n      const timeout = window.setTimeout(() => {\n        console.log('joining session ' + code)\n        dispatch({type: SET_SESSION_CODE, code})\n        dispatch({type: SET_SESSION_STATE, state: ACTIVE_SESSION_STATE})\n        history.replace('/session')\n      }, 8000)\n\n      return () => {\n        // clean up any joining side effects\n        window.clearTimeout(timeout)\n      }\n    }\n  }, [code, dispatch, history])\n\n  if (!code) return <GettingSessionCode />\n  return (\n    <div className=\"flex flex-col items-center justify-center space-y-10\">\n      <div className=\"flex flex-col items-center justify-center space-y-3\">\n        <h1>Your Cable Club code is:</h1>\n        <span className=\"text-7xl font-display bg-gameboy-green-lightest text-gameboy-green-darkest p-4 rounded-md\">\n          {code}\n        </span>\n        <span>\n          Have your Player 2 click \"Join Session\" and enter this code.\n        </span>\n      </div>\n      <div className=\"flex flex-col items-center justify-center space-y-2\">\n        <h2>Searching for a partner...</h2>\n        <img alt=\"\" src={loadingGif} width=\"20\" />\n      </div>\n      <span\n        className=\"text-sm underline cursor-pointer\"\n        onClick={() => {\n          endSession()\n        }}\n        role=\"button\">\n        End Session\n      </span>\n    </div>\n  )\n}\n\nfunction GettingSessionCode() {\n  return (\n    <div className=\"flex flex-col items-center justify-center py-12\">\n      <img alt=\"\" src={loadingGif} width=\"20\" />\n    </div>\n  )\n}\n\nexport default StartSession\n","import {Link, Route, BrowserRouter as Router, Switch} from 'react-router-dom'\n\nimport ConnectedSession from './ConnectedSession'\nimport JoinSession from './JoinSession'\nimport StartSession from './StartSession'\n\nfunction SessionLanding() {\n  return (\n    <div className=\"bg-purple-900 rounded-xl p-16 w-1/2\">\n      <Router basename=\"/cable-club-client-proto\">\n        <Switch>\n          <Route path=\"/session\">\n            <ConnectedSession />\n          </Route>\n          <Route path=\"/host\">\n            <StartSession />\n          </Route>\n          <Route path=\"/join\">\n            <JoinSession />\n          </Route>\n          <Route exact path=\"/\">\n            <Landing />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nfunction Landing() {\n  return (\n    <div className=\"flex flex-col items-center justify-center\">\n      <h1>Welcome to the Cable Club!</h1>\n      <div className=\"flex items-center justify-center space-x-20 mt-20 w-10/12\">\n        <Link\n          className=\"bg-gameboy-green-lightest px-4 py-2 text-xl font-display text-gameboy-green-darkest rounded hover:bg-gameboy-green-light\"\n          to=\"/host\">\n          Start session\n        </Link>\n        <Link\n          className=\"bg-gameboy-green-lightest px-4 py-2 text-xl font-display text-gameboy-green-darkest rounded hover:bg-gameboy-green-light\"\n          to=\"/join\">\n          Join session\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default SessionLanding\n","import {Context, initialState, reducer} from './store'\n\nimport SessionLanding from './components/sessions/SessionLanding'\nimport {useReducer} from 'react'\n\nfunction App() {\n  const [store, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <Context.Provider value={{store, dispatch}}>\n      <div className=\"h-screen flex flex-col items-center justify-center bg-gray-900 text-gray-50\">\n        <SessionLanding />\n      </div>\n    </Context.Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './styles/index.css'\n\nimport App from './App'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}